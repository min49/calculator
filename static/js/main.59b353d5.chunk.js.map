{"version":3,"sources":["components/Clear.js","components/Decimal.js","components/Digit.js","components/Display.js","components/Equal.js","components/Operator.js","util/KeyDownListenerManager.js","Calculator.js","serviceWorker.js","index.js"],"names":["Clear","handleKeyDown","_this","props","clearClick","handleClick","this","addKeyDownListener","removeKeyDownListener","react_default","a","createElement","id","onClick","className","React","Component","Decimal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","decimalClick","decimal","Digit","digitClick","digit","Display","value","commas","Equal","equalClick","OPERATIONS","add","symbol","opFunction","first","second","subtract","multiply","divide","Operator","operatorClick","op","KeyDownListenerManager","key","action","listeners","remove","handle","event","hasOwnProperty","Calculator","setState","state","isInErrorState","resetDisplay","display","strBelowMaxDigits","generateCommas","test","isFirstOperator","displayInputHasNotBeenChanged","operator","firstOperand","displayInputHasBeenChanged","parseFloat","secondOperand","operandToChange","createFirstOperatorChange","numberExceedsMaxDigits","errorState","displayValue","roundDisplayValueDecimalsToMaxDigits","calculateLastOperator_AndCreateCurrentOperatorChange","firstOperandIsExplicitlyInputToDisplay","getFirstOperand","getSecondOperand","newValue","maxDigitsCompliantCalculatedState","calculateWithOperator","initialState","keyDownListenerManager","document","addEventListener","removeEventListener","components_Display","components_Clear","components_Digit","components_Decimal","components_Operator","components_Equal","Math","pow","MAX_DIGITS","valueStr","length","toString","decimalIndex","indexOf","tenPower","roundingMultiplier","round","i","j","Boolean","window","location","hostname","match","ReactDOM","render","src_Calculator_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59b353d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clear extends React.Component {\r\n  componentDidMount() {\r\n    this.props.addKeyDownListener('Escape', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeKeyDownListener('Escape', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = () => {\r\n    this.props.clearClick();\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.clearClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} onClick={this.handleClick} className=\"button\">\r\n        AC\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clear;","import React from 'react';\r\n\r\nclass Decimal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.decimal = '.';\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.addKeyDownListener(this.decimal, this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeKeyDownListener(this.decimal, this.handleKeyDown);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.decimalClick();\r\n  };\r\n\r\n  handleKeyDown = () => {\r\n    this.props.decimalClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} onClick={this.handleClick} className=\"button\">\r\n        {this.decimal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Decimal;","import React from 'react';\r\n\r\nclass Digit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.digit = this.props.digit;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.addKeyDownListener(this.digit, this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeKeyDownListener(this.digit, this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = () => {\r\n    this.props.digitClick(this.digit);\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.digitClick(this.digit);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        digit={this.digit}\r\n        onClick={this.handleClick}\r\n        className=\"button\"\r\n      >\r\n        {this.digit}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Digit;","import React from 'react';\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id='display-wrapper'>\r\n        <div id={this.props.id}>{this.props.value}</div>\r\n        <div id='comma-display'>{this.props.commas}</div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nclass Equal extends React.Component {\r\n  componentDidMount() {\r\n    this.props.addKeyDownListener('Enter', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeKeyDownListener('Enter', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = () => {\r\n    this.props.equalClick();\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.equalClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} onClick={this.handleClick} className=\"button\">\r\n        =\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Equal;","import React from 'react';\r\n\r\nconst OPERATIONS = {\r\n  add: {\r\n    symbol: \"+\",\r\n    opFunction: function(first, second) {\r\n      return first + second;\r\n    }\r\n  },\r\n\r\n  subtract: {\r\n    symbol: \"-\",\r\n    opFunction: function(first, second) {\r\n      return first - second;\r\n    }\r\n  },\r\n\r\n  multiply: {\r\n    symbol: \"*\",\r\n    opFunction: function(first, second) {\r\n      return first * second;\r\n    }\r\n  },\r\n\r\n  divide: {\r\n    symbol: \"/\",\r\n    opFunction: function(first, second) {\r\n      return first / second;\r\n    }\r\n  }\r\n};\r\n\r\nclass Operator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.op = OPERATIONS[this.props.op];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.addKeyDownListener(this.op.symbol, this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeKeyDownListener(this.op.symbol, this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = () => {\r\n    this.props.operatorClick(this.op.opFunction);\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.operatorClick(this.op.opFunction);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} onClick={this.handleClick} className=\"button\">\r\n        {this.op.symbol}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Operator;","class KeyDownListenerManager {\r\n  constructor() {\r\n    this.listeners = {};\r\n  }\r\n\r\n  add = (key, action) => {\r\n    this.listeners[key] = action;\r\n  };\r\n\r\n  remove = (key) => {\r\n    delete this.listeners[key];\r\n  };\r\n\r\n  handle = (event) => {\r\n    let key = event.key;\r\n    if (this.listeners.hasOwnProperty(key)) {\r\n      this.listeners[key]();\r\n    }\r\n  }\r\n}\r\n\r\nexport default KeyDownListenerManager;","import React from 'react';\nimport './Calculator.css';\nimport {Clear, Decimal, Digit, Display, Equal, Operator} from './components';\nimport KeyDownListenerManager from './util/KeyDownListenerManager';\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = Calculator.initialState();\n    this.keyDownListenerManager = new KeyDownListenerManager();\n  }\n\n  static get MAX_DIGITS() { return 10; }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyDownListenerManager.handle);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyDownListenerManager.handle);\n  }\n\n  digitClick = digit => {\n    this.setState(state => {\n      if (state.isInErrorState) return state;\n\n      let value = (state.resetDisplay || state.display === \"0\")\n        ? \"\" : state.display;\n      if (Calculator.strBelowMaxDigits(value))\n        value += digit;\n\n      return {\n        display: value,\n        commas: Calculator.generateCommas(value),\n        resetDisplay: false\n      };\n    });\n  };\n\n  decimalClick = () => {\n    this.setState(state => {\n      if (state.isInErrorState) return state;\n\n      let value = state.resetDisplay ? \"0\" : state.display;\n      if (Calculator.strBelowMaxDigits(value) && !/\\./.test(value))\n        value += \".\";\n\n      return {\n        display: value,\n        commas: Calculator.generateCommas(value),\n        resetDisplay: false\n      };\n    });\n  };\n\n  operatorClick = opFunction => {\n    this.setState(state => {\n      if (state.isInErrorState) return state;\n\n      if (\n        state.isFirstOperator ||\n        Calculator.displayInputHasNotBeenChanged(state)\n      ) {\n        return createFirstOperatorChange(state);\n      } else {\n        return calculateLastOperator_AndCreateCurrentOperatorChange(state);\n      }\n    });\n\n    function createFirstOperatorChange(state) {\n      return {\n        operator: opFunction,\n        firstOperand: Calculator.displayInputHasBeenChanged(state)\n          ? parseFloat(state.display)\n          : state.firstOperand,\n        secondOperand: null,\n        isFirstOperator: false,\n        resetDisplay: true,\n        operandToChange: \"second\"\n      };\n    }\n\n    function calculateLastOperator_AndCreateCurrentOperatorChange(state) {\n      let secondOperand = parseFloat(state.display);\n      let value = state.operator(state.firstOperand, secondOperand);\n\n      if (Calculator.numberExceedsMaxDigits(value))\n        return Calculator.errorState();\n      else {\n        let displayValue = Calculator.roundDisplayValueDecimalsToMaxDigits(value);\n        return {\n          display: displayValue,\n          commas: Calculator.generateCommas(displayValue),\n          operator: opFunction,\n          firstOperand: value,\n          secondOperand: null,\n          resetDisplay: true,\n          operandToChange: \"second\"\n        };\n      }\n    }\n  };\n\n  equalClick = () => {\n    this.setState(state => {\n      if (state.isInErrorState) return state;\n\n      if (state.operator === null) // pressing = right after digits (e.g. 12 =)\n        return noOpEqualStateChange();\n      else\n        return calculateWithOperator(state);\n    });\n\n    function noOpEqualStateChange() {\n      return {\n        resetDisplay: true,\n        operandToChange: \"first\"\n      };\n    }\n\n    function calculateWithOperator(state) {\n      let firstOperand = getFirstOperand(state);\n      let secondOperand = getSecondOperand(state);\n      let newValue = state.operator(firstOperand, secondOperand);\n\n      if (Calculator.numberExceedsMaxDigits(newValue))\n        return Calculator.errorState();\n      else\n        return maxDigitsCompliantCalculatedState(newValue, secondOperand);\n    }\n\n    function getFirstOperand(state) {\n      if (firstOperandIsExplicitlyInputToDisplay(state))\n        return parseFloat(state.display);\n      else\n        return state.firstOperand;\n    }\n\n    function firstOperandIsExplicitlyInputToDisplay(state) {\n      return (state.operandToChange === \"first\" &&\n        Calculator.displayInputHasBeenChanged(state));\n    }\n\n    function getSecondOperand(state) {\n      if (state.secondOperand === null) // 3 + = -> 6\n        return parseFloat(state.display);\n      else\n        return state.secondOperand;\n    }\n\n    function maxDigitsCompliantCalculatedState(newValue, secondOperand) {\n      let displayValue = Calculator.roundDisplayValueDecimalsToMaxDigits(newValue);\n      return {\n        display: displayValue,\n        commas: Calculator.generateCommas(displayValue),\n        firstOperand: newValue,\n        secondOperand: secondOperand,\n        isFirstOperator: true,\n        resetDisplay: true,\n        operandToChange: \"first\"\n      };\n    }\n  };\n\n  clearClick = () => {\n    this.setState(Calculator.initialState());\n  };\n\n  static initialState() {\n    return {\n      display: \"0\",\n      commas: \"\",\n      operator: null,\n      firstOperand: 0,\n      secondOperand: null,\n      resetDisplay: false,\n      isFirstOperator: true, // 1 + 2 + -> 3 +\n      operandToChange: \"first\",\n      isInErrorState: false\n    };\n  }\n\n  static errorState() {\n    return {\n      display: 'E',\n      commas: '',\n      isInErrorState: true\n    };\n  }\n\n  static displayInputHasBeenChanged(state) {\n    return !state.resetDisplay;\n  }\n\n  static displayInputHasNotBeenChanged(state) {\n    return state.resetDisplay;\n  }\n\n  static numberExceedsMaxDigits(value) {\n    return (value >= Math.pow(10, Calculator.MAX_DIGITS));\n  }\n\n  static strBelowMaxDigits(valueStr) {\n    return valueStr.length < Calculator.MAX_DIGITS;\n  }\n\n  static roundDisplayValueDecimalsToMaxDigits(value) {\n    let displayValue = value.toString();\n    let decimalIndex = displayValue.indexOf('.');\n    if (decimalIndex > -1) {\n      let tenPower = (decimalIndex >= Calculator.MAX_DIGITS)\n        ? Calculator.MAX_DIGITS - (decimalIndex) // decimal at the end of max_digit\n        : Calculator.MAX_DIGITS - (decimalIndex + 1);\n      let roundingMultiplier = Math.pow(10, tenPower);\n      displayValue = Math.round(value * roundingMultiplier) / roundingMultiplier;\n      displayValue = displayValue.toString();\n    }\n    return displayValue;\n  }\n\n  static generateCommas(value) {\n    let decimalIndex = value.indexOf('.');\n    if (decimalIndex === -1) decimalIndex = value.length;\n\n    let commas = '';\n    let start = value[0] === '-' ? 4 : 3; // negative number\n    for (let i = start; i < decimalIndex; i += 3) { // digits before decimal\n      commas += ',     ';\n    }\n    for (let j = decimalIndex; j < value.length; j++) { // digits after decimal\n      commas += '  ';\n    }\n\n    return commas;\n  }\n\n  render() {\n    return (\n      <div id='calculator'>\n        <Display id=\"display\" value={this.state.display} commas={this.state.commas} />\n        <Clear id=\"clear\" clearClick={this.clearClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"seven\" digit=\"7\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"eight\" digit=\"8\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"nine\" digit=\"9\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"four\" digit=\"4\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"five\" digit=\"5\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"six\" digit=\"6\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"one\" digit=\"1\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"two\" digit=\"2\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"three\" digit=\"3\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Digit id=\"zero\" digit=\"0\" digitClick={this.digitClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Decimal id=\"decimal\" decimalClick={this.decimalClick}\n                 addKeyDownListener={this.keyDownListenerManager.add}\n                 removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Operator id=\"add\" op=\"add\" operatorClick={this.operatorClick}\n                  addKeyDownListener={this.keyDownListenerManager.add}\n                  removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Operator id=\"subtract\" op=\"subtract\" operatorClick={this.operatorClick}\n                  addKeyDownListener={this.keyDownListenerManager.add}\n                  removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Operator id=\"multiply\" op=\"multiply\" operatorClick={this.operatorClick}\n                  addKeyDownListener={this.keyDownListenerManager.add}\n                  removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Operator id=\"divide\" op=\"divide\" operatorClick={this.operatorClick}\n                  addKeyDownListener={this.keyDownListenerManager.add}\n                  removeKeyDownListener={this.keyDownListenerManager.remove} />\n        <Equal id=\"equals\" equalClick={this.equalClick}\n               addKeyDownListener={this.keyDownListenerManager.add}\n               removeKeyDownListener={this.keyDownListenerManager.remove} />\n      </div>\n    );\n  }\n}\n\n\nexport default Calculator;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}